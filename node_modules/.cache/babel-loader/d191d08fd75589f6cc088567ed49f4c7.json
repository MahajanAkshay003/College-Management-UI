{"ast":null,"code":"import _slicedToArray from \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/AdminSection/BatchSection/BatchContainer.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\nimport useGetDepartments from \"../../../remoteHooks/getDepartments\";\nimport { addBatch } from \"../../../remoteMethods/Batch/batch\";\nimport Select from \"react-select\";\nimport dropdownStyles from \"../../../styles/dropdownStyles\";\nimport NotificationCustomHook from \"../../../CustomHooks/NotificationCustomHook\";\nimport Notification from \"../../../components/Notification/Notification\";\n\nconst BatchContainer = props => {\n  const _NotificationCustomHo = NotificationCustomHook(),\n        _NotificationCustomHo2 = _slicedToArray(_NotificationCustomHo, 5),\n        isNotificationOpen = _NotificationCustomHo2[0],\n        setNotificationOpen = _NotificationCustomHo2[1],\n        notificationMessage = _NotificationCustomHo2[2],\n        notificationType = _NotificationCustomHo2[3],\n        setNotificationTypeAndMessage = _NotificationCustomHo2[4];\n\n  const _useGetDepartments = useGetDepartments(),\n        _useGetDepartments2 = _slicedToArray(_useGetDepartments, 3),\n        departments = _useGetDepartments2[0],\n        loading = _useGetDepartments2[1],\n        error = _useGetDepartments2[2];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        allDepartments = _useState2[0],\n        setAllDepartments = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        departmentId = _useState4[0],\n        setDepartmentId = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        batchName = _useState6[0],\n        setBatchName = _useState6[1];\n\n  useEffect(() => {\n    setAllDepartments(departments);\n  }, [departments]);\n\n  const saveBatchButtonHandler = async () => {\n    try {\n      await addBatch(departmentId, batchName);\n      resetForm();\n      setNotificationTypeAndMessage(\"success\", \"New Batch Added Successfully!\");\n    } catch (error) {\n      resetForm();\n      setNotificationTypeAndMessage(\"error\", \"Something went wrong!\");\n    }\n  };\n\n  const resetForm = () => {\n    setBatchName(\"\");\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    style: {\n      paddingTop: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    style: {\n      fontWeight: 300\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Add New Batch\"))), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    style: {\n      marginTop: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Select, {\n    styles: dropdownStyles,\n    options: allDepartments,\n    placeholder: \"Choose Department\",\n    onChange: selectedVal => setDepartmentId(selectedVal.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    style: {\n      marginTop: \"12px\"\n    },\n    label: \"Batch Name\",\n    variant: \"outlined\",\n    value: batchName,\n    onChange: event => setBatchName(event.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginTop: \"16px\",\n      marginBottom: \"16px\"\n    },\n    onClick: saveBatchButtonHandler,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Save\")))))), React.createElement(Notification, {\n    isNotificationOpen: isNotificationOpen,\n    setNotificationOpen: setNotificationOpen,\n    notificationMessage: notificationMessage,\n    notificationType: notificationType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n};\n\nexport default BatchContainer;","map":{"version":3,"sources":["/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/AdminSection/BatchSection/BatchContainer.js"],"names":["React","useEffect","useState","Button","Grid","TextField","Typography","useGetDepartments","addBatch","Select","dropdownStyles","NotificationCustomHook","Notification","BatchContainer","props","isNotificationOpen","setNotificationOpen","notificationMessage","notificationType","setNotificationTypeAndMessage","departments","loading","error","allDepartments","setAllDepartments","departmentId","setDepartmentId","batchName","setBatchName","saveBatchButtonHandler","resetForm","paddingTop","textAlign","fontWeight","marginTop","selectedVal","value","event","target","marginBottom"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\nimport useGetDepartments from \"../../../remoteHooks/getDepartments\";\nimport { addBatch } from \"../../../remoteMethods/Batch/batch\";\nimport Select from \"react-select\";\nimport dropdownStyles from \"../../../styles/dropdownStyles\";\nimport NotificationCustomHook from \"../../../CustomHooks/NotificationCustomHook\";\nimport Notification from \"../../../components/Notification/Notification\";\n\nconst BatchContainer = props => {\n  const [\n    isNotificationOpen, setNotificationOpen, notificationMessage, notificationType, setNotificationTypeAndMessage\n  ] = NotificationCustomHook();\n  const [ departments, loading, error ] = useGetDepartments();\n  const [ allDepartments, setAllDepartments ] = useState([]);\n  const [ departmentId, setDepartmentId ] = useState(\"\");\n  const [ batchName, setBatchName ] = useState(\"\");\n  useEffect(() => {\n    setAllDepartments(departments);\n  }, [departments]);\n  const saveBatchButtonHandler = async () => {\n    try {\n      await addBatch(departmentId, batchName);\n      resetForm();\n      setNotificationTypeAndMessage(\"success\", \"New Batch Added Successfully!\");\n    } catch (error) {\n      resetForm();\n      setNotificationTypeAndMessage(\"error\", \"Something went wrong!\");\n    }\n  }\n  const resetForm = () => { setBatchName(\"\"); };\n  return (\n    <Grid container justify={\"center\"} spacing={0}>\n      <Grid item xs={12}>\n        <Grid container justify={\"center\"} style={{ paddingTop: \"8px\" }}>\n          <Grid item xs={6} style={{ textAlign: \"center\"}}>\n            <Typography variant={\"h4\"} style={{ fontWeight: 300 }}>\n              Add New Batch\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid container justify={\"center\"} style={{ marginTop: 16 }}>\n          <Grid item xs={6}>\n            <Select\n              styles={dropdownStyles}\n              options={allDepartments}\n              placeholder={\"Choose Department\"}\n              onChange={selectedVal => setDepartmentId(selectedVal.value)}\n            />\n            <TextField\n              style={{ marginTop: \"12px\" }}\n              label=\"Batch Name\"\n              variant=\"outlined\"\n              value={batchName}\n              onChange={event => setBatchName(event.target.value)}\n              fullWidth\n            />\n            <Grid container justify={\"flex-end\"}>\n              <Grid item xs={3}>\n                <Button\n                  variant={\"contained\"}\n                  color={\"secondary\"}\n                  style={{ marginTop: \"16px\", marginBottom: \"16px\" }}\n                  onClick={saveBatchButtonHandler}\n                  fullWidth\n                >\n                  Save\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Notification\n        isNotificationOpen={isNotificationOpen}\n        setNotificationOpen={setNotificationOpen}\n        notificationMessage={notificationMessage}\n        notificationType={notificationType}\n      />\n    </Grid>\n  );\n}\n\nexport default BatchContainer;"]},"metadata":{},"sourceType":"module"}