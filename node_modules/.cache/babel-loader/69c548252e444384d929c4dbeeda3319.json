{"ast":null,"code":"import axios from 'axios';\nimport { apiUrl } from \"../../vars/config\";\nexport const sendAnnouncement = () => {\n  return new Promise((resolve, reject) => {\n    axios({\n      method: \"POST\",\n      url: \"\".concat(apiUrl, \"/Announcements/sendAnnouncement\"),\n      data: {\n        subject,\n        description,\n        studentId,\n        senderId,\n        senderType\n      }\n    }).then(({\n      data\n    }) => {});\n  });\n};\nexport const getAnnouncements = (id, userType) => {\n  return new Promise((resolve, reject) => {\n    switch (userType) {\n      case \"student\":\n        axios({\n          method: \"GET\",\n          url: \"\".concat(apiUrl, \"/Announcements/getStudentAnnouncements\"),\n          params: {\n            studentId: id\n          }\n        }).then(({\n          data\n        }) => {\n          resolve(data.announcements);\n        }).catch(error => {\n          reject(error);\n        });\n        break;\n\n      default:\n        axios({\n          method: \"GET\",\n          url: \"\".concat(apiUrl, \"/Announcements/getEmployeeAnnouncements\"),\n          params: {\n            id,\n            userType\n          }\n        }).then(({\n          data\n        }) => {\n          resolve(data.announcements);\n        }).catch(error => {\n          reject(error);\n        });\n    }\n  });\n};","map":{"version":3,"sources":["/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/remoteMethods/Announcement/announcement.js"],"names":["axios","apiUrl","sendAnnouncement","Promise","resolve","reject","method","url","data","subject","description","studentId","senderId","senderType","then","getAnnouncements","id","userType","params","announcements","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCL,IAAAA,KAAK,CAAC;AACJM,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,YAAKN,MAAL,oCAFC;AAGJO,MAAAA,IAAI,EAAE;AACJC,QAAAA,OADI;AACKC,QAAAA,WADL;AACkBC,QAAAA,SADlB;AAC6BC,QAAAA,QAD7B;AACuCC,QAAAA;AADvC;AAHF,KAAD,CAAL,CAMGC,IANH,CAMQ,CAAC;AAAEN,MAAAA;AAAF,KAAD,KAAc,CAErB,CARD;AASD,GAVM,CAAP;AAWD,CAZM;AAcP,OAAO,MAAMO,gBAAgB,GAAG,CAACC,EAAD,EAAKC,QAAL,KAAkB;AAChD,SAAO,IAAId,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAQY,QAAR;AACE,WAAK,SAAL;AACEjB,QAAAA,KAAK,CAAC;AACJM,UAAAA,MAAM,EAAE,KADJ;AAEJC,UAAAA,GAAG,YAAKN,MAAL,2CAFC;AAGJiB,UAAAA,MAAM,EAAE;AAAEP,YAAAA,SAAS,EAAEK;AAAb;AAHJ,SAAD,CAAL,CAIGF,IAJH,CAIQ,CAAC;AAAEN,UAAAA;AAAF,SAAD,KAAc;AACpBJ,UAAAA,OAAO,CAACI,IAAI,CAACW,aAAN,CAAP;AACD,SAND,EAMGC,KANH,CAMSC,KAAK,IAAI;AAChBhB,UAAAA,MAAM,CAACgB,KAAD,CAAN;AACD,SARD;AASA;;AACF;AACErB,QAAAA,KAAK,CAAC;AACJM,UAAAA,MAAM,EAAE,KADJ;AAEJC,UAAAA,GAAG,YAAKN,MAAL,4CAFC;AAGJiB,UAAAA,MAAM,EAAE;AAAEF,YAAAA,EAAF;AAAMC,YAAAA;AAAN;AAHJ,SAAD,CAAL,CAIGH,IAJH,CAIQ,CAAC;AAAEN,UAAAA;AAAF,SAAD,KAAc;AACpBJ,UAAAA,OAAO,CAACI,IAAI,CAACW,aAAN,CAAP;AACD,SAND,EAMGC,KANH,CAMSC,KAAK,IAAI;AAChBhB,UAAAA,MAAM,CAACgB,KAAD,CAAN;AACD,SARD;AAbJ;AAuBD,GAxBM,CAAP;AAyBD,CA1BM","sourcesContent":["import axios from 'axios';\nimport {apiUrl} from \"../../vars/config\";\n\nexport const sendAnnouncement = () => {\n  return new Promise((resolve, reject) => {\n    axios({\n      method: \"POST\",\n      url: `${apiUrl}/Announcements/sendAnnouncement`,\n      data: {\n        subject, description, studentId, senderId, senderType\n      }\n    }).then(({ data }) => {\n\n    })\n  })\n}\n\nexport const getAnnouncements = (id, userType) => {\n  return new Promise((resolve, reject) => {\n    switch (userType) {\n      case \"student\":\n        axios({\n          method: \"GET\",\n          url: `${apiUrl}/Announcements/getStudentAnnouncements`,\n          params: { studentId: id }\n        }).then(({ data }) => {\n          resolve(data.announcements);\n        }).catch(error => {\n          reject(error);\n        });\n        break;\n      default:\n        axios({\n          method: \"GET\",\n          url: `${apiUrl}/Announcements/getEmployeeAnnouncements`,\n          params: { id, userType }\n        }).then(({ data }) => {\n          resolve(data.announcements);\n        }).catch(error => {\n          reject(error);\n        });\n    }\n  })\n}"]},"metadata":{},"sourceType":"module"}