{"ast":null,"code":"import _slicedToArray from \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/AdminSection/DepartmentSection/DepartmentTableContainer/DepartmentTableContainer.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Paper, Table, TableBody, TableCell, TableHead, TableRow, Button } from \"@material-ui/core\";\nimport useGetRefreshedDepartments from \"../../../../remoteHooks/getRefreshedDepartments\";\nimport { green, orange } from \"@material-ui/core/colors\";\nimport AddOrEditHodDialog from \"../DepartmentDialogs/AddOrEditHodDialog\";\n\nconst DepartmentTableContainer = props => {\n  const _useGetRefreshedDepar = useGetRefreshedDepartments(),\n        _useGetRefreshedDepar2 = _slicedToArray(_useGetRefreshedDepar, 2),\n        departments = _useGetRefreshedDepar2[0],\n        setSearch = _useGetRefreshedDepar2[1];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isEdit = _useState4[0],\n        setEdit = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedDepartment = _useState6[0],\n        setSelectedDepartment = _useState6[1];\n\n  const tableHeaders = [\"Department Name\", \"Department Description\", \"HOD\", \"Actions\"];\n\n  const getRefreshedDepartmentData = () => setSearch(true);\n\n  const addEditHodHandler = (departmentIndex, isEdit) => {\n    setSelectedDepartment(departments[selectedDepartment]);\n    setEdit(isEdit);\n    setOpen(true);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Table, {\n    size: 'medium',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, tableHeaders.map((tableHeader, index) => React.createElement(TableCell, {\n    key: index,\n    align: 'left',\n    padding: 'default',\n    sortDirection: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, tableHeader)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, departments && departments.map((department, index) => React.createElement(TableRow, {\n    key: department.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, department.departmentName)), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, department.departmentDescription), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, department.departmentHodId && department.departmentHod.fullName), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, !department.departmentHodId && React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      backgroundColor: green[500],\n      color: \"white\"\n    },\n    onClick: () => addEditHodHandler(index, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Add HOD\"), department.departmentHodId && React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      backgroundColor: orange[500],\n      color: \"white\"\n    },\n    onClick: () => addEditHodHandler(index, true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Edit HOD\"))))))), React.createElement(AddOrEditHodDialog, {\n    open: open,\n    setOpen: setOpen,\n    getRefreshedDepartmentData: getRefreshedDepartmentData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nexport default DepartmentTableContainer;","map":{"version":3,"sources":["/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/AdminSection/DepartmentSection/DepartmentTableContainer/DepartmentTableContainer.js"],"names":["React","Fragment","useState","Paper","Table","TableBody","TableCell","TableHead","TableRow","Button","useGetRefreshedDepartments","green","orange","AddOrEditHodDialog","DepartmentTableContainer","props","departments","setSearch","open","setOpen","isEdit","setEdit","selectedDepartment","setSelectedDepartment","tableHeaders","getRefreshedDepartmentData","addEditHodHandler","departmentIndex","map","tableHeader","index","department","id","departmentName","departmentDescription","departmentHodId","departmentHod","fullName","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport {Paper, Table, TableBody, TableCell, TableHead, TableRow, Button} from \"@material-ui/core\";\nimport useGetRefreshedDepartments from \"../../../../remoteHooks/getRefreshedDepartments\";\nimport {green, orange} from \"@material-ui/core/colors\";\nimport AddOrEditHodDialog from \"../DepartmentDialogs/AddOrEditHodDialog\";\n\nconst DepartmentTableContainer = props => {\n  const [ departments, setSearch ] = useGetRefreshedDepartments();\n  const [ open, setOpen ] = useState(false);\n  const [ isEdit, setEdit ] = useState(false);\n  const [ selectedDepartment, setSelectedDepartment ] = useState();\n  const tableHeaders = [\"Department Name\", \"Department Description\", \"HOD\", \"Actions\"];\n  const getRefreshedDepartmentData = () => setSearch(true);\n  const addEditHodHandler = (departmentIndex, isEdit) => {\n    setSelectedDepartment(departments[selectedDepartment]);\n    setEdit(isEdit);\n    setOpen(true);\n  }\n  return (\n    <Fragment>\n      <Paper>\n        <Table size={'medium'}>\n          <TableHead>\n            <TableRow>\n              {tableHeaders.map((tableHeader, index) => (\n                <TableCell\n                  key={index}\n                  align={'left'}\n                  padding={'default'}\n                  sortDirection={false}\n                >\n                  {tableHeader}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {departments && departments.map((department, index) => (\n              <TableRow key={department.id}>\n                <TableCell><b>{department.departmentName}</b></TableCell>\n                <TableCell>{department.departmentDescription}</TableCell>\n                <TableCell>{department.departmentHodId && department.departmentHod.fullName}</TableCell>\n                <TableCell>\n                  {\n                    !department.departmentHodId &&\n                    <Button variant={\"contained\"} style={{ backgroundColor: green[500], color: \"white\" }} onClick={() => addEditHodHandler(index, false)}>\n                      Add HOD\n                    </Button>\n                  }\n                  {\n                    department.departmentHodId &&\n                    <Button variant={\"contained\"} style={{ backgroundColor: orange[500], color: \"white\" }} onClick={() => addEditHodHandler(index, true)}>\n                      Edit HOD\n                    </Button>\n                  }\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n      <AddOrEditHodDialog open={open} setOpen={setOpen} getRefreshedDepartmentData={getRefreshedDepartmentData}  />\n    </Fragment>\n  );\n}\n\nexport default DepartmentTableContainer;"]},"metadata":{},"sourceType":"module"}