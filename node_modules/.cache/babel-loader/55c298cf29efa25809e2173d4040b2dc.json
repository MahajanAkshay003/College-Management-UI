{"ast":null,"code":"import _slicedToArray from \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/AdminSection/FacultyAttendanceSection/Panel/FacultyTable.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Table, TableHead, TableRow, TableCell, TableBody, Button, Paper, Typography } from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport AddFacultyAttendanceDialog from \"./Dialogs/AddFacultyAttendanceDialog\";\nimport { green, red } from \"@material-ui/core/colors\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { markAttendanceOfFaculty } from \"../../../../remoteMethods/Faculty/Faculty\";\n\nconst FacultyTable = props => {\n  const _useState = useState([\"Faculty Name\", \"Department\", \"Working Days\"]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tableHeaders = _useState2[0],\n        setTableHeaders = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isOpenAttendanceDialog = _useState4[0],\n        setOpenAttendanceDialog = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedFaculty = _useState6[0],\n        setSelectedFaculty = _useState6[1];\n\n  const _useState7 = useState(new Date()),\n        _useState8 = _slicedToArray(_useState7, 2),\n        selectedDate = _useState8[0],\n        handleDateChange = _useState8[1];\n\n  const faculties = props.faculties,\n        startSearch = props.startSearch;\n\n  const markFacultyAbsent = async facultyId => {\n    await markAttendanceOfFaculty(facultyId, getCurrentTimeStamp(), \"\", \"\", false, \"entry\");\n    startSearch();\n  };\n\n  const getCurrentTimeStamp = () => {\n    return new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()).getTime();\n  };\n\n  const markFacultyAttendance = async (facultyId, type, time, attendanceId) => {\n    const selectedTime = \"\".concat(time.getHours(), \":\").concat(time.getMinutes());\n    console.log(attendanceId, \"testing\");\n\n    if (type === \"exit\") {\n      await markAttendanceOfFaculty(facultyId, getCurrentTimeStamp(), \"\", selectedTime, true, \"exit\", attendanceId);\n    } else if (type === \"entry\") {\n      await markAttendanceOfFaculty(facultyId, getCurrentTimeStamp(), selectedTime, \"\", true, \"entry\");\n    }\n\n    startSearch();\n    setOpenAttendanceDialog(false);\n  };\n\n  useEffect(() => {\n    if (props.view) setTableHeaders([...tableHeaders, \"In Exam Cell\"]);else setTableHeaders([...tableHeaders, \"Actions\"]);\n  }, []);\n  return React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Table, {\n    size: 'medium',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, tableHeaders.map((tableHeader, index) => React.createElement(TableCell, {\n    key: index,\n    align: 'left',\n    padding: 'default',\n    sortDirection: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, tableHeader)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, faculties.map(faculty => React.createElement(TableRow, {\n    key: faculty.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, faculty.fullName), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, faculty.department.departmentName), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, faculty.workingDays), props.view && React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, faculty.isExamCellEmployee ? \"Yes\" : \"No\"), !props.view && React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, faculty.attendance.length === 0 ? React.createElement(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: faculty.attendance.length > 0 ? \"primary\" : \"secondary\",\n    style: {\n      color: \"white\"\n    },\n    onClick: () => markFacultyAbsent(faculty.id),\n    style: {\n      marginRight: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Mark Leave\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: faculty.attendance.length > 0 ? \"secondary\" : \"primary\",\n    style: {\n      color: \"white\"\n    },\n    onClick: () => {\n      setSelectedFaculty(faculty);\n      setOpenAttendanceDialog(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Entry Attendance\")) : React.createElement(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, !faculty.attendance[0].isPresent && React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Faculty on Leave\"), faculty.attendance[0].isPresent && faculty.attendance[0].exitTime === \"\" && React.createElement(Button, {\n    variant: \"contained\",\n    color: faculty.attendance.length > 0 ? \"secondary\" : \"primary\",\n    style: {\n      color: \"white\"\n    },\n    onClick: () => {\n      setSelectedFaculty(faculty);\n      setOpenAttendanceDialog(true);\n    },\n    style: {\n      marginRight: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, faculty.attendance.length > 0 ? \"Exit Attendance\" : \"Entry Attendance\"), faculty.attendance[0].isPresent && faculty.attendance[0].exitTime !== \"\" && React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Faculty has left\"))))))), isOpenAttendanceDialog && React.createElement(AddFacultyAttendanceDialog, {\n    selectedDate: selectedDate,\n    handleDateChange: handleDateChange,\n    facultyId: selectedFaculty.id,\n    isOpenAttendanceDialog: isOpenAttendanceDialog,\n    setOpenAttendanceDialog: setOpenAttendanceDialog,\n    facultyAttendance: selectedFaculty.attendance,\n    markFacultyAttendance: markFacultyAttendance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })));\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n    secondary: red\n  }\n});\nexport default FacultyTable;","map":{"version":3,"sources":["/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/AdminSection/FacultyAttendanceSection/Panel/FacultyTable.js"],"names":["React","useEffect","useState","Table","TableHead","TableRow","TableCell","TableBody","Button","Paper","Typography","createMuiTheme","ThemeProvider","AddFacultyAttendanceDialog","green","red","DateFnsUtils","MuiPickersUtilsProvider","markAttendanceOfFaculty","FacultyTable","props","tableHeaders","setTableHeaders","isOpenAttendanceDialog","setOpenAttendanceDialog","selectedFaculty","setSelectedFaculty","Date","selectedDate","handleDateChange","faculties","startSearch","markFacultyAbsent","facultyId","getCurrentTimeStamp","getFullYear","getMonth","getDate","getTime","markFacultyAttendance","type","time","attendanceId","selectedTime","getHours","getMinutes","console","log","view","map","tableHeader","index","faculty","id","fullName","department","departmentName","workingDays","isExamCellEmployee","attendance","length","theme","color","marginRight","isPresent","exitTime","palette","primary","secondary"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Table, TableHead, TableRow, TableCell, TableBody, Button, Paper, Typography} from \"@material-ui/core\";\nimport {createMuiTheme, ThemeProvider} from \"@material-ui/core/styles\";\nimport AddFacultyAttendanceDialog from \"./Dialogs/AddFacultyAttendanceDialog\";\nimport {green, red} from \"@material-ui/core/colors\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport {markAttendanceOfFaculty} from \"../../../../remoteMethods/Faculty/Faculty\";\n\nconst FacultyTable = props => {\n  const [ tableHeaders, setTableHeaders ] = useState([\"Faculty Name\", \"Department\", \"Working Days\"])\n  const [ isOpenAttendanceDialog, setOpenAttendanceDialog ] = useState(false);\n  const [ selectedFaculty, setSelectedFaculty ] = useState({});\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const { faculties, startSearch } = props;\n  const markFacultyAbsent = async (facultyId) => {\n    await markAttendanceOfFaculty(facultyId, getCurrentTimeStamp(), \"\", \"\", false, \"entry\");\n    startSearch();\n  }\n  const getCurrentTimeStamp = () => {\n    return new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()).getTime();\n  }\n  const markFacultyAttendance = async (facultyId, type, time, attendanceId) => {\n    const selectedTime = `${time.getHours()}:${time.getMinutes()}`;\n    console.log(attendanceId, \"testing\");\n    if (type === \"exit\") {\n      await markAttendanceOfFaculty(facultyId, getCurrentTimeStamp(), \"\", selectedTime, true, \"exit\", attendanceId);\n    } else if (type === \"entry\") {\n      await markAttendanceOfFaculty(facultyId, getCurrentTimeStamp(), selectedTime, \"\",true, \"entry\")\n    }\n    startSearch();\n    setOpenAttendanceDialog(false);\n  }\n  useEffect(() => {\n    if (props.view) setTableHeaders([...tableHeaders, \"In Exam Cell\"]);\n    else setTableHeaders([...tableHeaders, \"Actions\"]);\n  }, [])\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Paper elevation={3}>\n        <Table size={'medium'}>\n          <TableHead>\n            <TableRow>\n              {tableHeaders.map((tableHeader, index) => (\n                <TableCell\n                  key={index}\n                  align={'left'}\n                  padding={'default'}\n                  sortDirection={false}\n                >\n                  {tableHeader}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {faculties.map(faculty => (\n              <TableRow key={faculty.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {faculty.fullName}\n                </TableCell>\n                <TableCell>{faculty.department.departmentName}</TableCell>\n                <TableCell>{faculty.workingDays}</TableCell>\n                {\n                  props.view && <TableCell>{faculty.isExamCellEmployee ? \"Yes\" : \"No\" }</TableCell>\n                }\n                {\n                  !props.view &&  <TableCell>\n                    {faculty.attendance.length === 0 ?\n                      <ThemeProvider theme={theme}>\n                        <Button variant=\"contained\" color={faculty.attendance.length > 0 ? \"primary\" : \"secondary\"} style={{ color: \"white\" }} onClick={() => markFacultyAbsent(faculty.id)} style={{ marginRight: 16 }}>\n                          Mark Leave\n                        </Button>\n                        <Button variant=\"contained\" color={faculty.attendance.length > 0 ? \"secondary\" : \"primary\"} style={{ color: \"white\" }} onClick={() => {\n                          setSelectedFaculty(faculty);\n                          setOpenAttendanceDialog(true);\n                        }}>\n                          Entry Attendance\n                        </Button>\n                      </ThemeProvider>\n                      :\n                      <ThemeProvider theme={theme}>\n                        {!faculty.attendance[0].isPresent && <Typography variant={\"body2\"}>Faculty on Leave</Typography>}\n                        {faculty.attendance[0].isPresent && faculty.attendance[0].exitTime === \"\" && <Button variant=\"contained\" color={faculty.attendance.length > 0 ? \"secondary\" : \"primary\"} style={{ color: \"white\" }} onClick={() => {\n                          setSelectedFaculty(faculty);\n                          setOpenAttendanceDialog(true);\n                        }} style={{ marginRight: 16 }}>\n                          {faculty.attendance.length > 0 ? \"Exit Attendance\" : \"Entry Attendance\" }\n                        </Button>}\n                        {faculty.attendance[0].isPresent && faculty.attendance[0].exitTime !== \"\" && <Typography variant={\"body2\"}>Faculty has left</Typography>}\n                      </ThemeProvider>\n                    }\n                  </TableCell>\n                }\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        {isOpenAttendanceDialog && <AddFacultyAttendanceDialog\n          selectedDate={selectedDate}\n          handleDateChange={handleDateChange}\n          facultyId={selectedFaculty.id}\n          isOpenAttendanceDialog={isOpenAttendanceDialog}\n          setOpenAttendanceDialog={setOpenAttendanceDialog}\n          facultyAttendance={selectedFaculty.attendance}\n          markFacultyAttendance={markFacultyAttendance}\n        />}\n      </Paper>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n    secondary: red\n  }\n});\n\nexport default FacultyTable;"]},"metadata":{},"sourceType":"module"}