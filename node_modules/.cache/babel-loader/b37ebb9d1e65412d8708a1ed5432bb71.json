{"ast":null,"code":"import _slicedToArray from \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/components/Queries/FacultyQueryList.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Fab, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Typography, Grid, Chip, List, ListSubheader, ListItem, ListItemIcon, ListItemText, Button } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { connect } from \"react-redux\";\nimport AddIcon from '@material-ui/icons/Add';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport useGetFaculties from \"../../remoteHooks/getFaculties\";\nimport AddQueryDialog from \"./AddQueryDialog\";\nimport useGetQueries from \"../../remoteHooks/getQueries\";\nimport AnswerQueryDialog from \"./AnswerQueryDialog\";\n\nconst FacultyQueryList = props => {\n  const _useGetFaculties = useGetFaculties(\"\"),\n        _useGetFaculties2 = _slicedToArray(_useGetFaculties, 2),\n        faculties = _useGetFaculties2[0],\n        startSearch = _useGetFaculties2[1];\n\n  const _useGetQueries = useGetQueries(props.user.userType, props.user.userId),\n        _useGetQueries2 = _slicedToArray(_useGetQueries, 3),\n        queries = _useGetQueries2[0],\n        setQueries = _useGetQueries2[1],\n        setStartSearch = _useGetQueries2[2];\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        panelOpenId = _useState2[0],\n        setPanelOpenId = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        open = _useState4[0],\n        setOpen = _useState4[1];\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, queries && queries.map(query => React.createElement(ExpansionPanel, {\n    expanded: panelOpenId === query.id,\n    onChange: () => {\n      if (panelOpenId === query.id) setPanelOpenId();else setPanelOpenId(query.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(ExpansionPanelSummary, {\n    expandIcon: React.createElement(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, query.questionTitle))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, query.questionDescription)), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      textAlign: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    label: query.student.fullName,\n    color: \"primary\",\n    style: {\n      marginRight: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    label: new Date(query.createdAt).toDateString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })))), React.createElement(ExpansionPanelDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, query.isAnswered && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(List, {\n    subheader: React.createElement(ListSubheader, {\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Your Answers\", React.createElement(Button, {\n      size: \"small\",\n      variant: \"contained\",\n      style: {\n        color: \"white\",\n        backgroundColor: green[500],\n        position: \"absolute\",\n        right: 10,\n        top: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Answer Query\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, query.answers.map(answer => React.createElement(ListItem, {\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(SendIcon, {\n    style: {\n      fontSize: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    secondary: answer.answer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })))))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      position: \"relative\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, !query.isAnswered && React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"This query requires your answer.\")), React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    style: {\n      color: \"white\",\n      backgroundColor: green[500],\n      position: \"absolute\",\n      right: 10,\n      top: 0\n    },\n    onClick: () => setOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Answer Query\")))))), React.createElement(AnswerQueryDialog, {\n    open: open,\n    setOpen: setOpen,\n    setStartSearch: setStartSearch,\n    id: panelOpenId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(FacultyQueryList);","map":{"version":3,"sources":["/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/components/Queries/FacultyQueryList.js"],"names":["React","Fragment","useState","Fab","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Typography","Grid","Chip","List","ListSubheader","ListItem","ListItemIcon","ListItemText","Button","green","connect","AddIcon","SendIcon","ExpandMoreIcon","useGetFaculties","AddQueryDialog","useGetQueries","AnswerQueryDialog","FacultyQueryList","props","faculties","startSearch","user","userType","userId","queries","setQueries","setStartSearch","panelOpenId","setPanelOpenId","open","setOpen","map","query","id","questionTitle","questionDescription","textAlign","student","fullName","marginRight","Date","createdAt","toDateString","isAnswered","color","backgroundColor","position","right","top","answers","answer","fontSize","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport { Fab, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Typography, Grid, Chip, List, ListSubheader, ListItem, ListItemIcon, ListItemText, Button } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { connect } from \"react-redux\";\nimport AddIcon from '@material-ui/icons/Add';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport useGetFaculties from \"../../remoteHooks/getFaculties\";\nimport AddQueryDialog from \"./AddQueryDialog\";\nimport useGetQueries from \"../../remoteHooks/getQueries\";\nimport AnswerQueryDialog from \"./AnswerQueryDialog\";\n\nconst FacultyQueryList = props => {\n  const [ faculties, startSearch ] = useGetFaculties(\"\");\n  const [ queries, setQueries, setStartSearch ] = useGetQueries(props.user.userType, props.user.userId);\n  const [ panelOpenId, setPanelOpenId ] = useState();\n  const [ open, setOpen ] = useState(false);\n  return (\n    <Fragment>\n      {queries && queries.map(query => (\n        <ExpansionPanel expanded={panelOpenId === query.id} onChange={() => {\n          if (panelOpenId === query.id) setPanelOpenId();\n          else setPanelOpenId(query.id)\n        }}>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Grid container>\n              <Grid item xs={3}>\n                <Typography variant={\"body2\"}><b>{query.questionTitle}</b></Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant={\"body2\"}>{query.questionDescription}</Typography>\n              </Grid>\n              <Grid item xs={3} style={{ textAlign: \"right\" }}>\n                <Chip label={query.student.fullName} color={\"primary\"} style={{ marginRight: 4 }} />\n                <Chip label={new Date(query.createdAt).toDateString()} />\n              </Grid>\n            </Grid>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Grid container>\n              <Grid item xs={12}>\n                {\n                  query.isAnswered\n                  &&\n                  <Fragment>\n                    <List\n                      subheader={\n                        <ListSubheader component=\"div\">\n                          Your Answers\n                          <Button size={\"small\"} variant={\"contained\"} style={{ color: \"white\", backgroundColor: green[500], position: \"absolute\", right: 10, top: 10 }}>Answer Query</Button>\n                        </ListSubheader>\n                      }\n                    >\n                      {query.answers.map(answer => (\n                        <ListItem button>\n                          <ListItemIcon>\n                            <SendIcon style={{ fontSize: 16 }} />\n                          </ListItemIcon>\n                          <ListItemText secondary={answer.answer}/>\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Fragment>\n                }\n              </Grid>\n              <Grid item xs={12} style={{ position: \"relative\" }}>\n                <Typography variant={\"body2\"}>\n                  {!query.isAnswered && <Typography variant={\"body2\"}>This query requires your answer.</Typography> }\n                </Typography>\n                <Button size={\"small\"} variant={\"contained\"} style={{ color: \"white\", backgroundColor: green[500], position: \"absolute\", right: 10, top: 0 }} onClick={() => setOpen(true)}>Answer Query</Button>\n              </Grid>\n            </Grid>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      ))}\n      <AnswerQueryDialog open={open} setOpen={setOpen} setStartSearch={setStartSearch} id={panelOpenId} />\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nexport default connect(mapStateToProps)(FacultyQueryList);"]},"metadata":{},"sourceType":"module"}