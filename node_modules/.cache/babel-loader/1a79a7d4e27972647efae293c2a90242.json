{"ast":null,"code":"import _slicedToArray from \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/Login/LoginContainer.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\nimport LoginTypeSwitcher from \"../../components/LoginForm/LoginTypeSwitcher\";\nimport Spinner from \"../../components/Helpers/Spinner/Spinner\";\nimport NotificationCustomHook from \"../../CustomHooks/NotificationCustomHook\";\n\nconst LoginContainer = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setLoading = _useState2[1];\n\n  useEffect(() => {\n    const loginTypes = [\"student\", \"admin\", \"faculty\", \"exam\"];\n    setLoading(true);\n    setTimeout(() => setLoading(false), 1000);\n    if (localStorage.getItem(\"token\")) return props.history.push(\"/dashboard\");\n    if (!loginTypes.includes(props.match.params.loginType)) return props.history.push(\"/\");\n  }, [props.match.params.loginType]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: window.innerHeight - 16,\n      margin: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    style: {\n      padding: \"6% 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, isLoading ? React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      margin: \"auto\",\n      padding: \"10% 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    size: 64,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })) : React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    md: 6,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    loginType: props.match.params.loginType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      right: 32,\n      bottom: 32\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(LoginTypeSwitcher, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))))));\n};\n\nexport default LoginContainer;","map":{"version":3,"sources":["/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/Login/LoginContainer.js"],"names":["React","Fragment","useEffect","useState","Grid","CircularProgress","LoginForm","LoginTypeSwitcher","Spinner","NotificationCustomHook","LoginContainer","props","isLoading","setLoading","loginTypes","setTimeout","localStorage","getItem","history","push","includes","match","params","loginType","width","height","window","innerHeight","margin","padding","position","right","bottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,mBAAvC;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,iBAAP,MAA8B,8CAA9B;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,OAAOC,sBAAP,MAAmC,0CAAnC;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA,oBACIR,QAAQ,CAAC,KAAD,CADZ;AAAA;AAAA,QACtBS,SADsB;AAAA,QACXC,UADW;;AAE9BX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,SAArB,EAAgC,MAAhC,CAAnB;AACAD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,MAAMF,UAAU,CAAC,KAAD,CAAjB,EAA0B,IAA1B,CAAV;AACA,QAAIG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC,OAAON,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmB,YAAnB,CAAP;AACnC,QAAI,CAACL,UAAU,CAACM,QAAX,CAAoBT,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBC,SAAvC,CAAL,EAAwD,OAAOZ,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAAP;AACzD,GANQ,EAMN,CAACR,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBC,SAApB,CANM,CAAT;AAOA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAEC,MAAM,CAACC,WAAP,GAAqB,EAA9C;AAAkDC,MAAAA,MAAM,EAAE;AAA1D,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,QAAzB;AAAmC,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,SAAS,GACR;AAAK,IAAA,KAAK,EAAE;AAAEkB,MAAAA,QAAQ,EAAE,UAAZ;AAAwBF,MAAAA,MAAM,EAAE,MAAhC;AAAwCC,MAAAA,OAAO,EAAE;AAAjD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADQ,GAKR,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAElB,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,KAAK,EAAE;AAAEO,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,KAAK,EAAE,EAA5B;AAAgCC,MAAAA,MAAM,EAAE;AAAxC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CANJ,CADF,CADF,CADF;AAoBD,CA7BD;;AA+BA,eAAetB,cAAf","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\nimport LoginTypeSwitcher from \"../../components/LoginForm/LoginTypeSwitcher\";\nimport Spinner from \"../../components/Helpers/Spinner/Spinner\";\nimport NotificationCustomHook from \"../../CustomHooks/NotificationCustomHook\";\n\nconst LoginContainer = props => {\n  const [ isLoading, setLoading ] = useState(false);\n  useEffect(() => {\n    const loginTypes = [\"student\", \"admin\", \"faculty\", \"exam\"];\n    setLoading(true);\n    setTimeout(() => setLoading(false), 1000);\n    if (localStorage.getItem(\"token\")) return props.history.push(\"/dashboard\");\n    if (!loginTypes.includes(props.match.params.loginType)) return props.history.push(\"/\");\n  }, [props.match.params.loginType]);\n  return (\n    <Fragment>\n      <div style={{ width: \"100%\", height: window.innerHeight - 16, margin: 0 }}>\n        <Grid container justify={\"center\"} style={{ padding: \"6% 0\" }}>\n          {isLoading ?\n            <div style={{ position: \"absolute\", margin: \"auto\", padding: \"10% 0\" }}>\n              <CircularProgress size={64} />\n            </div>\n            :\n            <Grid item xs={8} md={6} lg={4}>\n              <LoginForm loginType={props.match.params.loginType} />\n              <div style={{ position: \"fixed\", right: 32, bottom: 32 }}>\n                <LoginTypeSwitcher />\n              </div>\n            </Grid>\n          }\n        </Grid>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default LoginContainer;"]},"metadata":{},"sourceType":"module"}