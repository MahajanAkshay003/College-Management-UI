{"ast":null,"code":"import _slicedToArray from \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { getBatchesByDepartmentId } from \"../remoteMethods/Batch/batch\";\n\nconst useGetBatchesByDepartment = departmentId => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        batches = _useState2[0],\n        setBatches = _useState2[1];\n\n  useEffect(() => {\n    if (departmentId !== \"\") {\n      getBatchesByDepartmentId(departmentId).then(({\n        batch\n      }) => {\n        setBatches(batch.map(currentBatch => ({\n          label: currentBatch.batchName,\n          value: currentBatch.id\n        })));\n      });\n    }\n  }, [departmentId]);\n  return batches;\n};\n\nexport default useGetBatchesByDepartment;","map":{"version":3,"sources":["/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/remoteHooks/getBatchesByDepartment.js"],"names":["React","useEffect","useState","getBatchesByDepartmentId","useGetBatchesByDepartment","departmentId","batches","setBatches","then","batch","map","currentBatch","label","batchName","value","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,wBAAT,QAAyC,8BAAzC;;AAEA,MAAMC,yBAAyB,GAAGC,YAAY,IAAI;AAAA,oBAChBH,QAAQ,CAAC,EAAD,CADQ;AAAA;AAAA,QACxCI,OADwC;AAAA,QAC/BC,UAD+B;;AAEhDN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,YAAY,KAAK,EAArB,EAAyB;AACvBF,MAAAA,wBAAwB,CAACE,YAAD,CAAxB,CAAuCG,IAAvC,CAA4C,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAe;AACzDF,QAAAA,UAAU,CAACE,KAAK,CAACC,GAAN,CAAUC,YAAY,KAAK;AACpCC,UAAAA,KAAK,EAAED,YAAY,CAACE,SADgB;AAEpCC,UAAAA,KAAK,EAAEH,YAAY,CAACI;AAFgB,SAAL,CAAtB,CAAD,CAAV;AAID,OALD;AAMD;AACF,GATQ,EASN,CAACV,YAAD,CATM,CAAT;AAUA,SAAOC,OAAP;AACD,CAbD;;AAeA,eAAeF,yBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getBatchesByDepartmentId } from \"../remoteMethods/Batch/batch\";\n\nconst useGetBatchesByDepartment = departmentId => {\n  const [ batches, setBatches ] = useState([]);\n  useEffect(() => {\n    if (departmentId !== \"\") {\n      getBatchesByDepartmentId(departmentId).then(({ batch }) => {\n        setBatches(batch.map(currentBatch => ({\n          label: currentBatch.batchName,\n          value: currentBatch.id\n        })));\n      })\n    }\n  }, [departmentId]);\n  return batches;\n}\n\nexport default useGetBatchesByDepartment;"]},"metadata":{},"sourceType":"module"}