{"ast":null,"code":"import _slicedToArray from \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/AdminSection/AddSubjectSection/SubjectContainer/SubjectContainer.js\";\nimport React, { useState } from 'react';\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\nimport { addDepartment } from \"../../../../remoteMethods/Department/Department\";\nimport NotificationCustomHook from \"../../../../CustomHooks/NotificationCustomHook\";\nimport Notification from \"../../../../components/Notification/Notification\";\nimport useGetDepartments from \"../../../../remoteHooks/getDepartments\";\nimport useGetBatchesByDepartment from \"../../../../remoteHooks/getBatchesByDepartment\";\nimport Select from \"react-select\";\nimport dropdownStyles from \"../../../../styles/dropdownStyles\";\n\nconst SubjectContainer = props => {\n  const _NotificationCustomHo = NotificationCustomHook(),\n        _NotificationCustomHo2 = _slicedToArray(_NotificationCustomHo, 5),\n        isNotificationOpen = _NotificationCustomHo2[0],\n        setNotificationOpen = _NotificationCustomHo2[1],\n        notificationMessage = _NotificationCustomHo2[2],\n        notificationType = _NotificationCustomHo2[3],\n        setNotificationTypeAndMessage = _NotificationCustomHo2[4];\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        subjectCode = _useState2[0],\n        setSubjectCode = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        subjectName = _useState4[0],\n        setSubjectName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        semester = _useState6[0],\n        setSemester = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        departmentId = _useState8[0],\n        setDepartmentId = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        batchId = _useState10[0],\n        setBatchId = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        subjectDescription = _useState12[0],\n        setSubjectDescription = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        credits = _useState14[0],\n        setCredits = _useState14[1];\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        subjectType = _useState16[0],\n        setSubjectType = _useState16[1];\n\n  const _useGetDepartments = useGetDepartments(),\n        _useGetDepartments2 = _slicedToArray(_useGetDepartments, 3),\n        departments = _useGetDepartments2[0],\n        loading = _useGetDepartments2[1],\n        error = _useGetDepartments2[2];\n\n  const batches = useGetBatchesByDepartment(departmentId);\n  const subjectTypes = [{\n    value: \"theory\",\n    label: \"Theory\"\n  }, {\n    value: \"practical\",\n    label: \"Practical\"\n  }];\n  const semesters = Array(8).fill().map((val, index) => ({\n    value: index + 1,\n    label: \"Semester \".concat(index + 1)\n  }));\n\n  const addSubjectButtonHandler = async () => {\n    try {} catch (error) {}\n  };\n\n  const resetForm = () => {};\n\n  return React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    style: {\n      paddingTop: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    style: {\n      fontWeight: 300\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Add New Subject\"))), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    style: {\n      marginTop: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Subject Code\",\n    variant: \"outlined\",\n    autoFocus: true,\n    value: subjectCode,\n    onChange: event => setSubjectCode(event.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    style: {\n      marginTop: \"12px\"\n    },\n    label: \"Subject Name\",\n    variant: \"outlined\",\n    value: subjectName,\n    onChange: event => setSubjectName(event.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    style: {\n      marginTop: \"12px\"\n    },\n    label: \"Subject Description\",\n    variant: \"outlined\",\n    value: subjectDescription,\n    onChange: event => setSubjectDescription(event.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    style: {\n      marginTop: \"12px\"\n    },\n    label: \"Subject Credits\",\n    variant: \"outlined\",\n    value: credits,\n    onChange: event => setCredits(event.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      marginBottom: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Select, {\n    styles: dropdownStyles,\n    options: departments,\n    placeholder: \"Choose Department\",\n    onChange: selectedVal => setDepartmentId(selectedVal.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      marginBottom: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Select, {\n    styles: dropdownStyles,\n    options: batches,\n    placeholder: \"Choose Batch\",\n    onChange: selectedVal => setBatchId(selectedVal.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      marginBottom: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Select, {\n    styles: dropdownStyles,\n    options: semesters,\n    placeholder: \"Choose Semester\",\n    onChange: selectedVal => setSemester(selectedVal.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      marginBottom: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Select, {\n    styles: dropdownStyles,\n    options: subjectTypes,\n    placeholder: \"Choose Semester\",\n    onChange: selectedVal => setSubjectType(selectedVal.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginTop: \"16px\",\n      marginBottom: \"16px\"\n    },\n    onClick: addSubjectButtonHandler,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Save\")))))), React.createElement(Notification, {\n    isNotificationOpen: isNotificationOpen,\n    setNotificationOpen: setNotificationOpen,\n    notificationMessage: notificationMessage,\n    notificationType: notificationType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }));\n};\n\nexport default SubjectContainer;","map":{"version":3,"sources":["/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/AdminSection/AddSubjectSection/SubjectContainer/SubjectContainer.js"],"names":["React","useState","Button","Grid","TextField","Typography","addDepartment","NotificationCustomHook","Notification","useGetDepartments","useGetBatchesByDepartment","Select","dropdownStyles","SubjectContainer","props","isNotificationOpen","setNotificationOpen","notificationMessage","notificationType","setNotificationTypeAndMessage","subjectCode","setSubjectCode","subjectName","setSubjectName","semester","setSemester","departmentId","setDepartmentId","batchId","setBatchId","subjectDescription","setSubjectDescription","credits","setCredits","subjectType","setSubjectType","departments","loading","error","batches","subjectTypes","value","label","semesters","Array","fill","map","val","index","addSubjectButtonHandler","resetForm","paddingTop","textAlign","fontWeight","marginTop","event","target","marginBottom","selectedVal"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,UAAlC,QAAoD,mBAApD;AACA,SAASC,aAAT,QAA8B,iDAA9B;AACA,OAAOC,sBAAP,MAAmC,gDAAnC;AACA,OAAOC,YAAP,MAAyB,kDAAzB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,yBAAP,MAAsC,gDAAtC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAAA,gCAG5BP,sBAAsB,EAHM;AAAA;AAAA,QAE9BQ,kBAF8B;AAAA,QAEVC,mBAFU;AAAA,QAEWC,mBAFX;AAAA,QAEgCC,gBAFhC;AAAA,QAEkDC,6BAFlD;;AAAA,oBAIQlB,QAAQ,CAAC,EAAD,CAJhB;AAAA;AAAA,QAIxBmB,WAJwB;AAAA,QAIXC,cAJW;;AAAA,qBAKQpB,QAAQ,CAAC,EAAD,CALhB;AAAA;AAAA,QAKxBqB,WALwB;AAAA,QAKXC,cALW;;AAAA,qBAMEtB,QAAQ,CAAC,EAAD,CANV;AAAA;AAAA,QAMxBuB,QANwB;AAAA,QAMdC,WANc;;AAAA,qBAOUxB,QAAQ,CAAC,EAAD,CAPlB;AAAA;AAAA,QAOxByB,YAPwB;AAAA,QAOVC,eAPU;;AAAA,qBAQA1B,QAAQ,CAAC,EAAD,CARR;AAAA;AAAA,QAQxB2B,OARwB;AAAA,QAQfC,UARe;;AAAA,sBASsB5B,QAAQ,CAAC,EAAD,CAT9B;AAAA;AAAA,QASxB6B,kBATwB;AAAA,QASJC,qBATI;;AAAA,sBAUA9B,QAAQ,CAAC,EAAD,CAVR;AAAA;AAAA,QAUxB+B,OAVwB;AAAA,QAUfC,UAVe;;AAAA,sBAWQhC,QAAQ,CAAC,EAAD,CAXhB;AAAA;AAAA,QAWxBiC,WAXwB;AAAA,QAWXC,cAXW;;AAAA,6BAYM1B,iBAAiB,EAZvB;AAAA;AAAA,QAYzB2B,WAZyB;AAAA,QAYZC,OAZY;AAAA,QAYHC,KAZG;;AAahC,QAAMC,OAAO,GAAG7B,yBAAyB,CAACgB,YAAD,CAAzC;AACA,QAAMc,YAAY,GAAG,CAAC;AAAEC,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAAD,EAAuC;AAAED,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAAvC,CAArB;AACA,QAAMC,SAAS,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,GAAgBC,GAAhB,CAAoB,CAACC,GAAD,EAAMC,KAAN,MAAiB;AAAEP,IAAAA,KAAK,EAAEO,KAAK,GAAG,CAAjB;AAAoBN,IAAAA,KAAK,qBAAcM,KAAK,GAAG,CAAtB;AAAzB,GAAjB,CAApB,CAAlB;;AACA,QAAMC,uBAAuB,GAAG,YAAY;AAC1C,QAAI,CAEH,CAFD,CAEE,OAAOX,KAAP,EAAc,CAEf;AACF,GAND;;AAOA,QAAMY,SAAS,GAAG,MAAM,CACvB,CADD;;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,QAAzB;AAAmC,IAAA,OAAO,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,QAAzB;AAAmC,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,IAArB;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,CADF,EAQE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,QAAzB;AAAmC,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,SAAS,EAAE,IAHb;AAIE,IAAA,KAAK,EAAElC,WAJT;AAKE,IAAA,QAAQ,EAAEmC,KAAK,IAAIlC,cAAc,CAACkC,KAAK,CAACC,MAAN,CAAaf,KAAd,CALnC;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEa,MAAAA,SAAS,EAAE;AAAb,KADT;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,KAAK,EAAEhC,WAJT;AAKE,IAAA,QAAQ,EAAEiC,KAAK,IAAIhC,cAAc,CAACgC,KAAK,CAACC,MAAN,CAAaf,KAAd,CALnC;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEa,MAAAA,SAAS,EAAE;AAAb,KADT;AAEE,IAAA,KAAK,EAAC,qBAFR;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,KAAK,EAAExB,kBAJT;AAKE,IAAA,QAAQ,EAAEyB,KAAK,IAAIxB,qBAAqB,CAACwB,KAAK,CAACC,MAAN,CAAaf,KAAd,CAL1C;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAyBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEa,MAAAA,SAAS,EAAE;AAAb,KADT;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,KAAK,EAAEtB,OAJT;AAKE,IAAA,QAAQ,EAAEuB,KAAK,IAAItB,UAAU,CAACsB,KAAK,CAACC,MAAN,CAAaf,KAAd,CAL/B;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADF,CADF,EAqCE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,KAAK,EAAE;AAAEgB,MAAAA,YAAY,EAAE;AAAhB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE7C,cADV;AAEE,IAAA,OAAO,EAAEwB,WAFX;AAGE,IAAA,WAAW,EAAE,mBAHf;AAIE,IAAA,QAAQ,EAAEsB,WAAW,IAAI/B,eAAe,CAAC+B,WAAW,CAACjB,KAAb,CAJ1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,KAAK,EAAE;AAAEgB,MAAAA,YAAY,EAAE;AAAhB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE7C,cADV;AAEE,IAAA,OAAO,EAAE2B,OAFX;AAGE,IAAA,WAAW,EAAE,cAHf;AAIE,IAAA,QAAQ,EAAEmB,WAAW,IAAI7B,UAAU,CAAC6B,WAAW,CAACjB,KAAb,CAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,EAiBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,KAAK,EAAE;AAAEgB,MAAAA,YAAY,EAAE;AAAhB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE7C,cADV;AAEE,IAAA,OAAO,EAAE+B,SAFX;AAGE,IAAA,WAAW,EAAE,iBAHf;AAIE,IAAA,QAAQ,EAAEe,WAAW,IAAIjC,WAAW,CAACiC,WAAW,CAACjB,KAAb,CAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,EAyBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,KAAK,EAAE;AAAEgB,MAAAA,YAAY,EAAE;AAAhB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE7C,cADV;AAEE,IAAA,OAAO,EAAE4B,YAFX;AAGE,IAAA,WAAW,EAAE,iBAHf;AAIE,IAAA,QAAQ,EAAEkB,WAAW,IAAIvB,cAAc,CAACuB,WAAW,CAACjB,KAAb,CAJzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzBF,CArCF,EAuEE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,WADX;AAEE,IAAA,KAAK,EAAE,WAFT;AAGE,IAAA,KAAK,EAAE;AAAEa,MAAAA,SAAS,EAAE,MAAb;AAAqBG,MAAAA,YAAY,EAAE;AAAnC,KAHT;AAIE,IAAA,OAAO,EAAER,uBAJX;AAKE,IAAA,SAAS,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CAvEF,CADF,CARF,CADF,EAiGE,oBAAC,YAAD;AACE,IAAA,kBAAkB,EAAElC,kBADtB;AAEE,IAAA,mBAAmB,EAAEC,mBAFvB;AAGE,IAAA,mBAAmB,EAAEC,mBAHvB;AAIE,IAAA,gBAAgB,EAAEC,gBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjGF,CADF;AA0GD,CAnID;;AAqIA,eAAeL,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\nimport { addDepartment } from \"../../../../remoteMethods/Department/Department\";\nimport NotificationCustomHook from \"../../../../CustomHooks/NotificationCustomHook\";\nimport Notification from \"../../../../components/Notification/Notification\";\nimport useGetDepartments from \"../../../../remoteHooks/getDepartments\";\nimport useGetBatchesByDepartment from \"../../../../remoteHooks/getBatchesByDepartment\";\nimport Select from \"react-select\";\nimport dropdownStyles from \"../../../../styles/dropdownStyles\";\n\nconst SubjectContainer = props => {\n  const [\n    isNotificationOpen, setNotificationOpen, notificationMessage, notificationType, setNotificationTypeAndMessage\n  ] = NotificationCustomHook();\n  const [ subjectCode, setSubjectCode ] = useState(\"\");\n  const [ subjectName, setSubjectName ] = useState(\"\");\n  const [ semester, setSemester ] = useState(\"\");\n  const [ departmentId, setDepartmentId ] = useState(\"\");\n  const [ batchId, setBatchId ] = useState(\"\");\n  const [ subjectDescription, setSubjectDescription ] = useState(\"\");\n  const [ credits, setCredits ] = useState(\"\");\n  const [ subjectType, setSubjectType ] = useState(\"\");\n  const [departments, loading, error] = useGetDepartments();\n  const batches = useGetBatchesByDepartment(departmentId);\n  const subjectTypes = [{ value: \"theory\", label: \"Theory\" }, { value: \"practical\", label: \"Practical\" }];\n  const semesters = Array(8).fill().map((val, index) => ({ value: index + 1, label: `Semester ${index + 1}` }));\n  const addSubjectButtonHandler = async () => {\n    try {\n\n    } catch (error) {\n\n    }\n  }\n  const resetForm = () => {\n  }\n  return (\n    <Grid container justify={\"center\"} spacing={0}>\n      <Grid item xs={12}>\n        <Grid container justify={\"center\"} style={{ paddingTop: \"8px\" }}>\n          <Grid item xs={6} style={{ textAlign: \"center\"}}>\n            <Typography variant={\"h4\"} style={{ fontWeight: 300 }}>\n              Add New Subject\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid container justify={\"center\"} style={{ marginTop: 16 }}>\n          <Grid item xs={6}>\n            <Grid container>\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Subject Code\"\n                  variant=\"outlined\"\n                  autoFocus={true}\n                  value={subjectCode}\n                  onChange={event => setSubjectCode(event.target.value)}\n                  fullWidth\n                />\n                <TextField\n                  style={{ marginTop: \"12px\" }}\n                  label=\"Subject Name\"\n                  variant=\"outlined\"\n                  value={subjectName}\n                  onChange={event => setSubjectName(event.target.value)}\n                  fullWidth\n                />\n                <TextField\n                  style={{ marginTop: \"12px\" }}\n                  label=\"Subject Description\"\n                  variant=\"outlined\"\n                  value={subjectDescription}\n                  onChange={event => setSubjectDescription(event.target.value)}\n                  fullWidth\n                />\n                <TextField\n                  style={{ marginTop: \"12px\" }}\n                  label=\"Subject Credits\"\n                  variant=\"outlined\"\n                  value={credits}\n                  onChange={event => setCredits(event.target.value)}\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid container>\n              <Grid item xs={12} style={{ marginBottom: 16 }}>\n                <Select\n                  styles={dropdownStyles}\n                  options={departments}\n                  placeholder={\"Choose Department\"}\n                  onChange={selectedVal => setDepartmentId(selectedVal.value)}\n                />\n              </Grid>\n              <Grid item xs={12} style={{ marginBottom: 16 }}>\n                <Select\n                  styles={dropdownStyles}\n                  options={batches}\n                  placeholder={\"Choose Batch\"}\n                  onChange={selectedVal => setBatchId(selectedVal.value)}\n                />\n              </Grid>\n              <Grid item xs={12} style={{ marginBottom: 16 }}>\n                <Select\n                  styles={dropdownStyles}\n                  options={semesters}\n                  placeholder={\"Choose Semester\"}\n                  onChange={selectedVal => setSemester(selectedVal.value)}\n                />\n              </Grid>\n              <Grid item xs={12} style={{ marginBottom: 16 }}>\n                <Select\n                  styles={dropdownStyles}\n                  options={subjectTypes}\n                  placeholder={\"Choose Semester\"}\n                  onChange={selectedVal => setSubjectType(selectedVal.value)}\n                />\n              </Grid>\n            </Grid>\n            <Grid container justify={\"flex-end\"}>\n              <Grid item xs={3}>\n                <Button\n                  variant={\"contained\"}\n                  color={\"secondary\"}\n                  style={{ marginTop: \"16px\", marginBottom: \"16px\" }}\n                  onClick={addSubjectButtonHandler}\n                  fullWidth\n                >\n                  Save\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Notification\n        isNotificationOpen={isNotificationOpen}\n        setNotificationOpen={setNotificationOpen}\n        notificationMessage={notificationMessage}\n        notificationType={notificationType}\n      />\n    </Grid>\n  );\n}\n\nexport default SubjectContainer;"]},"metadata":{},"sourceType":"module"}