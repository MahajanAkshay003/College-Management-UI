{"ast":null,"code":"import _slicedToArray from \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/components/Queries/AnswerQueryDialog.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, DialogContentText, Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { saveQueryAnswer } from \"../../remoteMethods/Announcement/announcement\";\n\nconst AnswerQueryDialog = props => {\n  const open = props.open,\n        setOpen = props.setOpen,\n        setStartSearch = props.setStartSearch,\n        id = props.id;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        answer = _useState2[0],\n        setAnswer = _useState2[1];\n\n  const closeModalHandler = () => {\n    setAnswer(\"\");\n    setOpen(false);\n  };\n\n  const answerQuery = () => {\n    saveQueryAnswer(id, answer).then(() => {\n      setStartSearch(true);\n      closeModalHandler();\n    }).catch(error => {\n      console.log(error);\n      closeModalHandler();\n    });\n  };\n\n  return React.createElement(Dialog, {\n    fullWidth: true,\n    open: open,\n    onClose: closeModalHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Answer Query\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    label: \"Answer\",\n    value: answer,\n    variant: \"outlined\",\n    onChange: event => setAnswer(event.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: closeModalHandler,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: answerQuery,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Answer\")));\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(AnswerQueryDialog);","map":{"version":3,"sources":["/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/components/Queries/AnswerQueryDialog.js"],"names":["React","useEffect","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","DialogContentText","Grid","connect","saveQueryAnswer","AnswerQueryDialog","props","open","setOpen","setStartSearch","id","answer","setAnswer","closeModalHandler","answerQuery","then","catch","error","console","log","event","target","value","mapStateToProps","state","user"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,MALF,EAMEC,SANF,EAOEC,iBAPF,EAQEC,IARF,QASO,mBATP;AAUA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,eAAR,QAA8B,+CAA9B;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAAA,QACzBC,IADyB,GACaD,KADb,CACzBC,IADyB;AAAA,QACnBC,OADmB,GACaF,KADb,CACnBE,OADmB;AAAA,QACVC,cADU,GACaH,KADb,CACVG,cADU;AAAA,QACMC,EADN,GACaJ,KADb,CACMI,EADN;;AAAA,oBAEHhB,QAAQ,CAAC,EAAD,CAFL;AAAA;AAAA,QAEzBiB,MAFyB;AAAA,QAEjBC,SAFiB;;AAGjC,QAAMC,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAHD;;AAIA,QAAMM,WAAW,GAAG,MAAM;AACxBV,IAAAA,eAAe,CAACM,EAAD,EAAKC,MAAL,CAAf,CACGI,IADH,CACQ,MAAM;AACVN,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAI,MAAAA,iBAAiB;AAClB,KAJH,EAKGG,KALH,CAKSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAJ,MAAAA,iBAAiB;AAClB,KARH;AASD,GAVD;;AAWA,SACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAkB,IAAA,IAAI,EAAEN,IAAxB;AAA8B,IAAA,OAAO,EAAEM,iBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,KAAK,EAAEF,MAJT;AAKE,IAAA,OAAO,EAAE,UALX;AAME,IAAA,QAAQ,EAAES,KAAK,IAAIR,SAAS,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAN9B;AAOE,IAAA,SAAS,MAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAaE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAET,iBAAjB;AAAoC,IAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAbF,CADF;AAwBD,CA1CD;;AA4CA,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,IAAI,EAAED,KAAK,CAACC;AADoB,CAAL,CAA7B;;AAIA,eAAetB,OAAO,CAACoB,eAAD,CAAP,CAAyBlB,iBAAzB,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  DialogContentText,\n  Grid\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport {saveQueryAnswer} from \"../../remoteMethods/Announcement/announcement\";\n\nconst AnswerQueryDialog = props => {\n  const { open, setOpen, setStartSearch, id } = props;\n  const [ answer, setAnswer ] = useState(\"\");\n  const closeModalHandler = () => {\n    setAnswer(\"\");\n    setOpen(false);\n  }\n  const answerQuery = () => {\n    saveQueryAnswer(id, answer)\n      .then(() => {\n        setStartSearch(true);\n        closeModalHandler();\n      })\n      .catch(error => {\n        console.log(error);\n        closeModalHandler();\n      });\n  }\n  return (\n    <Dialog fullWidth open={open} onClose={closeModalHandler}>\n      <DialogTitle>Answer Query</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"Answer\"\n          value={answer}\n          variant={\"outlined\"}\n          onChange={event => setAnswer(event.target.value)}\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeModalHandler} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={answerQuery} color=\"primary\">\n          Answer\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(AnswerQueryDialog);"]},"metadata":{},"sourceType":"module"}