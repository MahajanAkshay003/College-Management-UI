{"ast":null,"code":"import _slicedToArray from \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/AdminSection/FacultyAttendanceSection/Panel/FacultyTable.js\";\nimport React, { useState } from 'react';\nimport { Table, TableHead, TableRow, TableCell, TableBody, Button, Paper, Typography } from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport AddFacultyAttendanceDialog from \"./Dialogs/AddFacultyAttendanceDialog\";\nimport { green, red } from \"@material-ui/core/colors\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { markAttendanceOfFaculty } from \"../../../../remoteMethods/Faculty/Faculty\";\n\nconst FacultyTable = props => {\n  const tableHeaders = [\"Faculty Name\", \"Department\", \"Working Days\", \"Actions\"];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpenAttendanceDialog = _useState2[0],\n        setOpenAttendanceDialog = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedFaculty = _useState4[0],\n        setSelectedFaculty = _useState4[1];\n\n  const _useState5 = useState(new Date()),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedDate = _useState6[0],\n        handleDateChange = _useState6[1];\n\n  const faculties = props.faculties;\n\n  const markFacultyAbsent = facultyId => {};\n\n  const getCurrentTimeStamp = () => {\n    return new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()).getTime();\n  };\n\n  const markFacultyAttendance = (facultyId, type, time, attendanceId) => {\n    if (type === \"exit\") {\n      markAttendanceOfFaculty(facultyId, getCurrentTimeStamp(), \"\", time, true, attendanceId);\n    } else {\n      markAttendanceOfFaculty(facultyId, getCurrentTimeStamp(), \"\", time, true);\n    }\n\n    setOpenAttendanceDialog(false);\n  };\n\n  return React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Table, {\n    size: 'medium',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, tableHeaders.map((tableHeader, index) => React.createElement(TableCell, {\n    key: index,\n    align: 'left',\n    padding: 'default',\n    sortDirection: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, tableHeader)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, faculties.map(faculty => React.createElement(TableRow, {\n    key: faculty.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, faculty.fullName), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, faculty.department.departmentName), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, faculty.workingDays), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, faculty.attendance.length === 0 ? React.createElement(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: faculty.attendance.length > 0 ? \"primary\" : \"secondary\",\n    style: {\n      color: \"white\"\n    },\n    onClick: () => markFacultyAbsent(faculty.id),\n    style: {\n      marginRight: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Mark Leave\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: faculty.attendance.length > 0 ? \"secondary\" : \"primary\",\n    style: {\n      color: \"white\"\n    },\n    onClick: () => {\n      setSelectedFaculty(faculty);\n      setOpenAttendanceDialog(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Entry Attendance\")) : React.createElement(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, !faculty.attendance[0].isPresent && React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Faculty on Leave\"), faculty.attendance[0].isPresent && React.createElement(Button, {\n    variant: \"contained\",\n    color: faculty.attendance.length > 0 ? \"secondary\" : \"primary\",\n    style: {\n      color: \"white\"\n    },\n    onClick: () => {\n      setSelectedFaculty(faculty);\n      setOpenAttendanceDialog(true);\n    },\n    style: {\n      marginRight: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, faculty.attendance.length > 0 ? \"Exit Attendance\" : \"Entry Attendance\"))))))), isOpenAttendanceDialog && React.createElement(AddFacultyAttendanceDialog, {\n    selectedDate: selectedDate,\n    handleDateChange: handleDateChange,\n    facultyId: selectedFaculty.id,\n    isOpenAttendanceDialog: isOpenAttendanceDialog,\n    setOpenAttendanceDialog: setOpenAttendanceDialog,\n    facultyAttendance: selectedFaculty.attendance,\n    markFacultyAttendance: markFacultyAttendance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })));\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n    secondary: red\n  }\n});\nexport default FacultyTable;","map":{"version":3,"sources":["/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/AdminSection/FacultyAttendanceSection/Panel/FacultyTable.js"],"names":["React","useState","Table","TableHead","TableRow","TableCell","TableBody","Button","Paper","Typography","createMuiTheme","ThemeProvider","AddFacultyAttendanceDialog","green","red","DateFnsUtils","MuiPickersUtilsProvider","markAttendanceOfFaculty","FacultyTable","props","tableHeaders","isOpenAttendanceDialog","setOpenAttendanceDialog","selectedFaculty","setSelectedFaculty","Date","selectedDate","handleDateChange","faculties","markFacultyAbsent","facultyId","getCurrentTimeStamp","getFullYear","getMonth","getDate","getTime","markFacultyAttendance","type","time","attendanceId","map","tableHeader","index","faculty","id","fullName","department","departmentName","workingDays","attendance","length","theme","color","marginRight","isPresent","palette","primary","secondary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Table, TableHead, TableRow, TableCell, TableBody, Button, Paper, Typography} from \"@material-ui/core\";\nimport {createMuiTheme, ThemeProvider} from \"@material-ui/core/styles\";\nimport AddFacultyAttendanceDialog from \"./Dialogs/AddFacultyAttendanceDialog\";\nimport {green, red} from \"@material-ui/core/colors\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport {markAttendanceOfFaculty} from \"../../../../remoteMethods/Faculty/Faculty\";\n\nconst FacultyTable = props => {\n  const tableHeaders = [\"Faculty Name\", \"Department\", \"Working Days\", \"Actions\"];\n  const [ isOpenAttendanceDialog, setOpenAttendanceDialog ] = useState(false);\n  const [ selectedFaculty, setSelectedFaculty ] = useState({});\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const { faculties } = props;\n  const markFacultyAbsent = (facultyId) => {\n\n  }\n  const getCurrentTimeStamp = () => {\n    return new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()).getTime();\n  }\n  const markFacultyAttendance = (facultyId, type, time, attendanceId) => {\n    if (type === \"exit\") {\n      markAttendanceOfFaculty(facultyId, getCurrentTimeStamp(), \"\", time, true, attendanceId);\n    } else {\n      markAttendanceOfFaculty(facultyId, getCurrentTimeStamp(), \"\", time, true)\n    }\n    setOpenAttendanceDialog(false);\n  }\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Paper elevation={3}>\n        <Table size={'medium'}>\n          <TableHead>\n            <TableRow>\n              {tableHeaders.map((tableHeader, index) => (\n                <TableCell\n                  key={index}\n                  align={'left'}\n                  padding={'default'}\n                  sortDirection={false}\n                >\n                  {tableHeader}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {faculties.map(faculty => (\n              <TableRow key={faculty.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {faculty.fullName}\n                </TableCell>\n                <TableCell>{faculty.department.departmentName}</TableCell>\n                <TableCell>{faculty.workingDays}</TableCell>\n                <TableCell>\n                  {faculty.attendance.length === 0 ?\n                    <ThemeProvider theme={theme}>\n                      <Button variant=\"contained\" color={faculty.attendance.length > 0 ? \"primary\" : \"secondary\"} style={{ color: \"white\" }} onClick={() => markFacultyAbsent(faculty.id)} style={{ marginRight: 16 }}>\n                        Mark Leave\n                      </Button>\n                      <Button variant=\"contained\" color={faculty.attendance.length > 0 ? \"secondary\" : \"primary\"} style={{ color: \"white\" }} onClick={() => {\n                        setSelectedFaculty(faculty);\n                        setOpenAttendanceDialog(true);\n                      }}>\n                        Entry Attendance\n                      </Button>\n                    </ThemeProvider>\n                    :\n                    <ThemeProvider theme={theme}>\n                      {!faculty.attendance[0].isPresent && <Typography variant={\"body2\"}>Faculty on Leave</Typography>}\n                      {faculty.attendance[0].isPresent && <Button variant=\"contained\" color={faculty.attendance.length > 0 ? \"secondary\" : \"primary\"} style={{ color: \"white\" }} onClick={() => {\n                        setSelectedFaculty(faculty);\n                        setOpenAttendanceDialog(true);\n                      }} style={{ marginRight: 16 }}>\n                        {faculty.attendance.length > 0 ? \"Exit Attendance\" : \"Entry Attendance\" }\n                      </Button>}\n                    </ThemeProvider>\n                  }\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        {isOpenAttendanceDialog && <AddFacultyAttendanceDialog\n          selectedDate={selectedDate}\n          handleDateChange={handleDateChange}\n          facultyId={selectedFaculty.id}\n          isOpenAttendanceDialog={isOpenAttendanceDialog}\n          setOpenAttendanceDialog={setOpenAttendanceDialog}\n          facultyAttendance={selectedFaculty.attendance}\n          markFacultyAttendance={markFacultyAttendance}\n        />}\n      </Paper>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n    secondary: red\n  }\n});\n\nexport default FacultyTable;"]},"metadata":{},"sourceType":"module"}