{"ast":null,"code":"import _slicedToArray from \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/Dashboard/DashboardContainer.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"../../components/Helpers/Header/Header\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Dashboard from \"./Dashboard\";\nimport { getUserByToken } from \"../../remoteMethods/CollegeUser/CollegeUser\";\nimport { loginUserAction } from \"../../actions/CollegeUser/actionObjects/collegeUserActions\";\n\nconst DashboardContainer = props => {\n  const user = props.user;\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setLoading = _useState2[1];\n\n  useEffect(() => {\n    if (user.isAuthenticated) {\n      setLoading(false);\n      props.history.push(\"/dashboard\");\n    } else {\n      const token = localStorage.getItem(\"token\");\n\n      if (token) {\n        getUserByToken(token).then(user => {\n          props.loginUser(user);\n          setLoading(false);\n          props.history.push(\"/dashboard\");\n        }).catch(error => {\n          localStorage.clear();\n          setLoading(false);\n          props.history.push(\"/\");\n        });\n      } else {\n        setLoading(false);\n        props.history.push(\"/\");\n      }\n    }\n  }, []);\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/dashboard\",\n    render: props => React.createElement(Dashboard, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loginUser: payload => dispatch(loginUserAction(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardContainer);","map":{"version":3,"sources":["/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/Dashboard/DashboardContainer.js"],"names":["React","Fragment","useEffect","useState","Grid","Header","BrowserRouter","Switch","Route","connect","Dashboard","getUserByToken","loginUserAction","DashboardContainer","props","user","isLoading","setLoading","isAuthenticated","history","push","token","localStorage","getItem","then","loginUser","catch","error","clear","mapStateToProps","state","mapDispatchToProps","dispatch","payload"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,6CAA7B;AACA,SAAQC,eAAR,QAA8B,4DAA9B;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAAA,QAC1BC,IAD0B,GACjBD,KADiB,CAC1BC,IAD0B;;AAAA,oBAEAZ,QAAQ,CAAC,IAAD,CAFR;AAAA;AAAA,QAE1Ba,SAF0B;AAAA,QAEfC,UAFe;;AAGlCf,EAAAA,SAAS,CAAC,MAAO;AACf,QAAIa,IAAI,CAACG,eAAT,EAA0B;AACxBD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,MAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACD,KAHD,MAGO;AACL,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,UAAIF,KAAJ,EAAW;AACTV,QAAAA,cAAc,CAACU,KAAD,CAAd,CAAsBG,IAAtB,CAA2BT,IAAI,IAAI;AACjCD,UAAAA,KAAK,CAACW,SAAN,CAAgBV,IAAhB;AACAE,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,UAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACD,SAJD,EAIGM,KAJH,CAISC,KAAK,IAAI;AAChBL,UAAAA,YAAY,CAACM,KAAb;AACAX,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,UAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,SARD;AASD,OAVD,MAUO;AACLH,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,QAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD;AACF;AACF,GArBQ,EAqBN,EArBM,CAAT;AAsBA,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,YAAb;AAA2B,IAAA,MAAM,EAAEN,KAAK,IAAI,oBAAC,SAAD,oBAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,CADJ;AAWD,CApCD;;AAsCA,MAAMe,eAAe,GAAGC,KAAK,KAAK;AAChCf,EAAAA,IAAI,EAAEe,KAAK,CAACf;AADoB,CAAL,CAA7B;;AAIA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCP,EAAAA,SAAS,EAAEQ,OAAO,IAAID,QAAQ,CAACpB,eAAe,CAACqB,OAAD,CAAhB;AADQ,CAAL,CAAnC;;AAIA,eAAexB,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,kBAA7C,CAAf","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"../../components/Helpers/Header/Header\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Dashboard from \"./Dashboard\";\nimport {getUserByToken} from \"../../remoteMethods/CollegeUser/CollegeUser\";\nimport {loginUserAction} from \"../../actions/CollegeUser/actionObjects/collegeUserActions\";\n\nconst DashboardContainer = props => {\n  const { user } = props;\n  const [ isLoading, setLoading ] = useState(true);\n  useEffect(()  => {\n    if (user.isAuthenticated) {\n      setLoading(false);\n      props.history.push(\"/dashboard\");\n    } else {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        getUserByToken(token).then(user => {\n          props.loginUser(user);\n          setLoading(false);\n          props.history.push(\"/dashboard\");\n        }).catch(error => {\n          localStorage.clear();\n          setLoading(false);\n          props.history.push(\"/\");\n        })\n      } else {\n        setLoading(false);\n        props.history.push(\"/\");\n      }\n    }\n  }, []);\n  return (\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <BrowserRouter>\n            <Switch>\n              <Route path={\"/dashboard\"} render={props => <Dashboard { ...props } />} />\n            </Switch>\n          </BrowserRouter>\n        </Grid>\n      </Grid>\n  )\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nconst mapDispatchToProps = dispatch => ({\n  loginUser: payload => dispatch(loginUserAction(payload))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardContainer);"]},"metadata":{},"sourceType":"module"}