{"ast":null,"code":"import _slicedToArray from \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/components/Queries/AddQueryDialog.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, DialogContentText, Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { sendQuery } from \"../../remoteMethods/Announcement/announcement\";\nimport dropdownStyles from \"../../styles/dropdownStyles\";\nimport Select from \"react-select\";\n\nconst AddQueryDialog = props => {\n  const open = props.open,\n        setOpen = props.setOpen,\n        saveQuery = props.saveQuery,\n        faculties = props.faculties;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        querySubject = _useState2[0],\n        setQuerySubject = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        queryDescription = _useState4[0],\n        setQueryDescription = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        facultyName = _useState6[0],\n        setFacultyName = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        facultyId = _useState8[0],\n        setFacultyId = _useState8[1];\n\n  const closeModalHandler = () => {\n    setQuerySubject(\"\");\n    setQueryDescription(\"\");\n    setFacultyId(\"\");\n    setFacultyName(\"\");\n    setOpen(false);\n  };\n\n  const saveQueryButtonHandler = () => {\n    sendQuery(facultyId, props.user.userId, querySubject, queryDescription).then(() => {\n      saveQuery(querySubject, queryDescription, facultyName);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  console.log(faculties, \"testing\");\n  return React.createElement(Dialog, {\n    fullWidth: true,\n    open: open,\n    onClose: closeModalHandler,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Ask Query\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    label: \"Internal Exam Marks\",\n    value: querySubject,\n    variant: \"outlined\",\n    onChange: event => setQuerySubject(event.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    margin: \"dense\",\n    label: \"Internal Extra Marks\",\n    value: queryDescription,\n    variant: \"outlined\",\n    onChange: event => setQueryDescription(event.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Select, {\n    styles: dropdownStyles,\n    options: faculties.map(faculty => ({\n      label: faculty.fullName,\n      value: faculty.id\n    })),\n    placeholder: \"Choose Faculty\",\n    onChange: selectedVal => {\n      setFacultyId(selectedVal.value);\n      setFacultyName(selectedVal.label);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: closeModalHandler,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: saveQueryButtonHandler,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Add\")));\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(AddQueryDialog);","map":{"version":3,"sources":["/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/components/Queries/AddQueryDialog.js"],"names":["React","useEffect","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","DialogContentText","Grid","connect","sendQuery","dropdownStyles","Select","AddQueryDialog","props","open","setOpen","saveQuery","faculties","querySubject","setQuerySubject","queryDescription","setQueryDescription","facultyName","setFacultyName","facultyId","setFacultyId","closeModalHandler","saveQueryButtonHandler","user","userId","then","catch","error","console","log","event","target","value","map","faculty","label","fullName","id","selectedVal","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  DialogContentText,\n  Grid\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport {sendQuery} from \"../../remoteMethods/Announcement/announcement\";\nimport dropdownStyles from \"../../styles/dropdownStyles\";\nimport Select from \"react-select\";\n\nconst AddQueryDialog = props => {\n  const { open, setOpen, saveQuery, faculties } = props;\n  const [ querySubject, setQuerySubject ] = useState(\"\");\n  const [ queryDescription, setQueryDescription ] = useState(\"\");\n  const [ facultyName, setFacultyName ] = useState(\"\");\n  const [ facultyId, setFacultyId ] = useState(\"\");\n  const closeModalHandler = () => {\n    setQuerySubject(\"\");\n    setQueryDescription(\"\");\n    setFacultyId(\"\");\n    setFacultyName(\"\");\n    setOpen(false);\n  }\n  const saveQueryButtonHandler = () => {\n    sendQuery(facultyId, props.user.userId, querySubject, queryDescription)\n      .then(() => {\n        saveQuery(querySubject, queryDescription, facultyName);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  console.log(faculties, \"testing\")\n  return (\n    <Dialog fullWidth open={open} onClose={closeModalHandler} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle>Ask Query</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"Internal Exam Marks\"\n          value={querySubject}\n          variant={\"outlined\"}\n          onChange={event => setQuerySubject(event.target.value)}\n          fullWidth\n        />\n        <TextField\n          margin=\"dense\"\n          label=\"Internal Extra Marks\"\n          value={queryDescription}\n          variant={\"outlined\"}\n          onChange={event => setQueryDescription(event.target.value)}\n          fullWidth\n        />\n        <Select\n          styles={dropdownStyles}\n          options={faculties.map(faculty => ({ label: faculty.fullName, value: faculty.id }))}\n          placeholder={\"Choose Faculty\"}\n          onChange={selectedVal => {\n            setFacultyId(selectedVal.value);\n            setFacultyName(selectedVal.label);\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeModalHandler} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={saveQueryButtonHandler} color=\"primary\">\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(AddQueryDialog);"]},"metadata":{},"sourceType":"module"}