{"ast":null,"code":"import _slicedToArray from \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/AdminSection/DepartmentSection/DepartmentDialogs/AddOrEditHodDialog.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid } from \"@material-ui/core\";\nimport { KeyboardTimePicker } from \"@material-ui/pickers\";\nimport useGetFaculties from \"../../../../remoteHooks/getFaculties\";\nimport dropdownStyles from \"../../../../styles/dropdownStyles\";\nimport Select from \"react-select\";\nimport { addHodToDepartment } from \"../../../../remoteMethods/Department/Department\";\n\nconst AddOrEditHodDialog = props => {\n  const open = props.open,\n        setOpen = props.setOpen,\n        department = props.department,\n        isEdit = props.isEdit;\n  const departmentId = department ? department.id : null;\n\n  const _useGetFaculties = useGetFaculties(\"\", departmentId),\n        _useGetFaculties2 = _slicedToArray(_useGetFaculties, 2),\n        faculties = _useGetFaculties2[0],\n        setStartSearch = _useGetFaculties2[1];\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        departmentHodId = _useState2[0],\n        setDepartmentHodId = _useState2[1];\n\n  useEffect(() => {\n    setStartSearch(true);\n    console.log(department);\n    if (isEdit && department) setDepartmentHodId(department.departmentHodId);\n  }, [isEdit, department]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setDepartmentHodId(null);\n  };\n\n  const addOrEditDepartmentHod = () => {\n    addHodToDepartment(department.departmentId, departmentHodId).then(() => handleClose()).catch(error => handleClose());\n  };\n\n  return React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, isEdit ? \"Change Department HOD\" : \"Add Department HOD\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Select, {\n    styles: dropdownStyles,\n    options: faculties.map(faculty => ({\n      label: faculty.fullName,\n      value: faculty.id\n    })),\n    placeholder: \"Choose HOD\",\n    onChange: selectedVal => setDepartmentHodId(selectedVal.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: addOrEditDepartmentHod,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Save\")));\n};\n\nexport default AddOrEditHodDialog;","map":{"version":3,"sources":["/home/vomaksh/Documents/college-project-dummy/College-Management-System-UI/src/containers/AdminSection/DepartmentSection/DepartmentDialogs/AddOrEditHodDialog.js"],"names":["React","useState","useEffect","Button","Dialog","DialogActions","DialogContent","DialogTitle","Grid","KeyboardTimePicker","useGetFaculties","dropdownStyles","Select","addHodToDepartment","AddOrEditHodDialog","props","open","setOpen","department","isEdit","departmentId","id","faculties","setStartSearch","departmentHodId","setDepartmentHodId","console","log","handleClose","addOrEditDepartmentHod","then","catch","error","map","faculty","label","fullName","value","selectedVal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid} from \"@material-ui/core\";\nimport {KeyboardTimePicker} from \"@material-ui/pickers\";\nimport useGetFaculties from \"../../../../remoteHooks/getFaculties\";\nimport dropdownStyles from \"../../../../styles/dropdownStyles\";\nimport Select from \"react-select\";\nimport {addHodToDepartment} from \"../../../../remoteMethods/Department/Department\";\n\nconst AddOrEditHodDialog = props => {\n  const { open, setOpen, department, isEdit } = props;\n  const departmentId = department ? department.id : null;\n  const [ faculties, setStartSearch ] = useGetFaculties(\"\", departmentId);\n  const [ departmentHodId, setDepartmentHodId ] = useState();\n  useEffect(() => {\n    setStartSearch(true);\n    console.log(department);\n    if (isEdit && department) setDepartmentHodId(department.departmentHodId);\n  }, [isEdit, department]);\n  const handleClose = () => {\n    setOpen(false);\n    setDepartmentHodId(null);\n  }\n  const addOrEditDepartmentHod = () => {\n    addHodToDepartment(department.departmentId, departmentHodId)\n      .then(() => handleClose())\n      .catch(error => handleClose());\n  }\n  return (\n    <Dialog open={open} onClose={handleClose} maxWidth={\"sm\"} fullWidth>\n      <DialogTitle>{ isEdit ? \"Change Department HOD\" : \"Add Department HOD\" }</DialogTitle>\n      <DialogContent>\n        <Grid container>\n          <Grid item xs={10}>\n            <Select\n              styles={dropdownStyles}\n              options={faculties.map(faculty => ({ label: faculty.fullName, value: faculty.id }))}\n              placeholder={\"Choose HOD\"}\n              onChange={selectedVal => setDepartmentHodId(selectedVal.value)}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={addOrEditDepartmentHod} color=\"primary\">\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default AddOrEditHodDialog;"]},"metadata":{},"sourceType":"module"}